// This file is auto-generated by @hey-api/openapi-ts

import type {
  GetToolByIdResponse,
  UpdateToolResponse,
  ModifyResponse,
  VerifyMfaResponse,
  GetProfileResponse,
  UpdateProfileResponse,
  GetToolsResponse,
  CreateToolResponse,
  RenewUserResponse,
  RenewOrgResponse,
  CheckoutResponse,
  CheckInResponse,
  CancelResponse,
  ReserveResponse,
  AcceptInviteResponse,
  RegisterResponse,
  RegisterOrgResponse,
  RefreshTokenResponse,
  LoginResponse,
} from './types.gen'

const toolResponseSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString())
  }
  return data
}

export const getToolByIdResponseTransformer = async (data: any): Promise<GetToolByIdResponse> => {
  data = toolResponseSchemaResponseTransformer(data)
  return data
}

export const updateToolResponseTransformer = async (data: any): Promise<UpdateToolResponse> => {
  data = toolResponseSchemaResponseTransformer(data)
  return data
}

const reservationResponseSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString())
  }
  if (data.userId) {
    data.userId = BigInt(data.userId.toString())
  }
  if (data.toolId) {
    data.toolId = BigInt(data.toolId.toString())
  }
  if (data.reservedFrom) {
    data.reservedFrom = new Date(data.reservedFrom)
  }
  if (data.reservedUntil) {
    data.reservedUntil = new Date(data.reservedUntil)
  }
  if (data.checkedOutAt) {
    data.checkedOutAt = new Date(data.checkedOutAt)
  }
  if (data.returnedAt) {
    data.returnedAt = new Date(data.returnedAt)
  }
  return data
}

export const modifyResponseTransformer = async (data: any): Promise<ModifyResponse> => {
  data = reservationResponseSchemaResponseTransformer(data)
  return data
}

const authResponseSchemaResponseTransformer = (data: any) => {
  if (data.expiresIn) {
    data.expiresIn = BigInt(data.expiresIn.toString())
  }
  if (data.userId) {
    data.userId = BigInt(data.userId.toString())
  }
  return data
}

export const verifyMfaResponseTransformer = async (data: any): Promise<VerifyMfaResponse> => {
  data = authResponseSchemaResponseTransformer(data)
  return data
}

const userDtoSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString())
  }
  return data
}

export const getProfileResponseTransformer = async (data: any): Promise<GetProfileResponse> => {
  data = userDtoSchemaResponseTransformer(data)
  return data
}

export const updateProfileResponseTransformer = async (
  data: any,
): Promise<UpdateProfileResponse> => {
  data = userDtoSchemaResponseTransformer(data)
  return data
}

export const getToolsResponseTransformer = async (data: any): Promise<GetToolsResponse> => {
  data = data.map((item: any) => {
    return toolResponseSchemaResponseTransformer(item)
  })
  return data
}

export const createToolResponseTransformer = async (data: any): Promise<CreateToolResponse> => {
  data = toolResponseSchemaResponseTransformer(data)
  return data
}

const membershipRenewalResponseSchemaResponseTransformer = (data: any) => {
  if (data.userId) {
    data.userId = BigInt(data.userId.toString())
  }
  if (data.newExpirationDate) {
    data.newExpirationDate = new Date(data.newExpirationDate)
  }
  return data
}

export const renewUserResponseTransformer = async (data: any): Promise<RenewUserResponse> => {
  data = membershipRenewalResponseSchemaResponseTransformer(data)
  return data
}

const orgSubscriptionResponseSchemaResponseTransformer = (data: any) => {
  if (data.organizationId) {
    data.organizationId = BigInt(data.organizationId.toString())
  }
  if (data.expiryDate) {
    data.expiryDate = new Date(data.expiryDate)
  }
  return data
}

export const renewOrgResponseTransformer = async (data: any): Promise<RenewOrgResponse> => {
  data = orgSubscriptionResponseSchemaResponseTransformer(data)
  return data
}

export const checkoutResponseTransformer = async (data: any): Promise<CheckoutResponse> => {
  data = reservationResponseSchemaResponseTransformer(data)
  return data
}

export const checkInResponseTransformer = async (data: any): Promise<CheckInResponse> => {
  data = reservationResponseSchemaResponseTransformer(data)
  return data
}

export const cancelResponseTransformer = async (data: any): Promise<CancelResponse> => {
  data = reservationResponseSchemaResponseTransformer(data)
  return data
}

export const reserveResponseTransformer = async (data: any): Promise<ReserveResponse> => {
  data = reservationResponseSchemaResponseTransformer(data)
  return data
}

const userResponseSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString())
  }
  return data
}

export const acceptInviteResponseTransformer = async (data: any): Promise<AcceptInviteResponse> => {
  data = userResponseSchemaResponseTransformer(data)
  return data
}

export const registerResponseTransformer = async (data: any): Promise<RegisterResponse> => {
  data = userResponseSchemaResponseTransformer(data)
  return data
}

const orgUserResponseSchemaResponseTransformer = (data: any) => {
  if (data.organizationId) {
    data.organizationId = BigInt(data.organizationId.toString())
  }
  if (data.adminUserId) {
    data.adminUserId = BigInt(data.adminUserId.toString())
  }
  return data
}

export const registerOrgResponseTransformer = async (data: any): Promise<RegisterOrgResponse> => {
  data = orgUserResponseSchemaResponseTransformer(data)
  return data
}

export const refreshTokenResponseTransformer = async (data: any): Promise<RefreshTokenResponse> => {
  data = authResponseSchemaResponseTransformer(data)
  return data
}

export const loginResponseTransformer = async (data: any): Promise<LoginResponse> => {
  data = authResponseSchemaResponseTransformer(data)
  return data
}
